{"componentChunkName":"component---src-templates-post-detail-js","path":"/post/how-to-create-a-widget-programmatically-in-magento-2/","result":{"data":{"wpPost":{"title":"How to create a Widget Programmatically in Magento 2","content":"\n<p>Magento 2 is a popular e-commerce platform that allows you to create a wide range of widgets for your online store. Widgets are small pieces of code that can be added to your website to display various types of content, such as product lists, featured products, promotions, customer reviews, and much more.&nbsp;<br><br>They can be placed anywhere on your website, such as on CMS pages, blocks, or even on the homepage. By using <a href=\"https://www.techopedia.com/definition/3452/widget\">widgets</a>, you can easily showcase your products and services in an attractive and user-friendly way. Additionally, creating a widget programmatically in Magento 2 is a great way to extend the functionality of your store and make it more user-friendly.&nbsp;</p>\n\n\n\n<p>This allows you to customize the look and feel of your Magento 2 website to meet your specific needs and requirements, as well as make it easier for your customers to find what they&#8217;re looking for. With the power of widgets, you can <a href=\"/how-to-setup-magento-2/\">set up Magento 2</a> and create a unique and engaging online shopping experience for your customers.</p>\n\n\n\n<p>In this blog, we will discuss <strong><em>how to create a widget programmatically in Magento 2</em></strong>, step by step.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Steps to create a widget programmatically in Magento 2&nbsp;</h2>\n\n\n\n<h3 class=\"wp-block-heading\">Step 1: Create the Widget Directory</h3>\n\n\n\n<p>The first step in creating a widget programmatically in Magento 2 is to create a directory for your widget. The directory should be created in the &#8220;app/code&#8221; directory of your Magento 2 installation. The directory structure should look like this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>bash\n\napp/code/Vendor/Module/</code></pre>\n\n\n\n<p>Where &#8220;Vendor&#8221; is the name of your company and &#8220;Module&#8221; is the name of your module.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Step 2: Create the Widget Class</h3>\n\n\n\n<p>Once you have created the widget directory, you need to create the widget class. The widget class is responsible for defining the functionality of your widget. You should create the widget class in the following location:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>bash\n\napp/code/Vendor/Module/Block/Widget/MyWidget.php</code></pre>\n\n\n\n<p>Here is an example of what your widget class could look like:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>php\n\n&lt;?php\n\nnamespace Vendor\\Module\\Block\\Widget;\n\nuse Magento\\Framework\\View\\Element\\Template;\n\nuse Magento\\Widget\\Block\\BlockInterface;\n\nclass MyWidget extends Template implements BlockInterface\n\n{\n\n&nbsp;&nbsp;&nbsp;&nbsp;protected $_template = \"widget/mywidget.phtml\";\n\n&nbsp;&nbsp;&nbsp;&nbsp;public function getHelloWorld()\n\n&nbsp;&nbsp;&nbsp;&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'Hello World!';\n\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n}</code></pre>\n\n\n\n<p>In this example, the widget class extends the &#8220;Magento\\Framework\\View\\Element\\Template&#8221; class, which provides the basic functionality for creating a widget. The widget class also implements the &#8220;Magento\\Widget\\Block\\BlockInterface&#8221; interface, which allows Magento to recognize the class as a widget.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Step 3: Create the Widget Template</h3>\n\n\n\n<p>Next, you need to create the widget template. The widget template is responsible for defining the appearance of your widget. You should create the widget template in the following location:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>bash\n\napp/code/Vendor/Module/view/frontend/templates/widget/mywidget.phtml</code></pre>\n\n\n\n<p>Here is an example of what your widget template could look like:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>php\n\n&lt;div&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;?php echo $this-&gt;getHelloWorld(); ?&gt;\n\n&lt;/div&gt;</code></pre>\n\n\n\n<p>In this example, the widget template calls the &#8220;getHelloWorld&#8221; method of the widget class, which returns the string &#8220;Hello World!&#8221;.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Step 4: Create the Widget XML Configuration</h3>\n\n\n\n<p>Finally, you need to create the widget XML configuration. The widget XML configuration is responsible for defining the configuration options for your widget. You should create the widget XML configuration in the following location:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>bash\n\napp/code/Vendor/Module/etc/widget.xml</code></pre>\n\n\n\n<p>Here is an example of what your widget XML configuration could look like:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>xml\n\n&lt;?xml version=\"1.0\"?&gt;\n\n&lt;widgets xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSche\n\nphp\n\n&lt;widgets xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Widget:etc/widget.xsd\"&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;widget id=\"vendor_module_mywidget\" class=\"Vendor\\Module\\Block\\Widget\\MyWidget\"&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;label translate=\"true\"&gt;My Widget&lt;/label&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;description translate=\"true\"&gt;A sample widget created programmatically in Magento 2&lt;/description&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;parameters&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;parameter name=\"title\" xsi:type=\"text\" required=\"false\" default=\"My Widget Title\"&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;label translate=\"true\"&gt;Title&lt;/label&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;description translate=\"true\"&gt;The title of the widget&lt;/description&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/parameter&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/parameters&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;template&gt;widget/mywidget.phtml&lt;/template&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;type&gt;cms&lt;/type&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/widget&gt;\n\n&lt;/widgets&gt;</code></pre>\n\n\n\n<p>In this example, the &#8220;id&#8221; attribute of the &#8220;widget&#8221; element defines the unique identifier for the widget. The &#8220;class&#8221; attribute defines the widget class that we created in Step 2. The &#8220;label&#8221; and &#8220;description&#8221; elements define the label and description of the widget, which will be displayed in the Magento admin panel. The &#8220;parameters&#8221; element defines the configuration options for the widget, in this case a single &#8220;title&#8221; option. The &#8220;template&#8221; element defines the widget template that we created in Step 3. The &#8220;type&#8221; element defines the type of widget, in this case a &#8220;cms&#8221; widget, which can be added to a CMS page or block.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Step 5: Declare the Module</h3>\n\n\n\n<p>Finally, you need to declare your module by creating the following file:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>bash\napp/code/Vendor/Module/etc/module.xml</code></pre>\n\n\n\n<p>Here is an example of what your module declaration could look like:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>xml\n\n&lt;?xml version=\"1.0\"?&gt;\n\n&lt;config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:Module/etc/module.xsd\"&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;module name=\"Vendor_Module\" setup_version=\"1.0.0\"&gt;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/module&gt;\n\n&lt;/config&gt;</code></pre>\n\n\n\n<p>In this example, the &#8220;name&#8221; attribute of the &#8220;module&#8221; element defines the name of your module, which should match the directory structure that you created in Step 1. The &#8220;setup_version&#8221; attribute defines the version of your module.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Step 6: Upgrade the Magento Installation</h3>\n\n\n\n<p>Finally, you need to upgrade your Magento installation to make sure that the new module and widget are recognized. You can upgrade your Magento installation by running the following command in the command line:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>python\n\nphp bin/magento setup:upgrade</code></pre>\n\n\n\n<p>After upgrading your Magento installation, you should be able to see your new widget in the Magento admin panel under &#8220;Content &gt; Widgets&#8221;. You can then add the widget to a CMS page or block to display it on your website.</p>\n\n\n\n<h3 class=\"wp-block-heading\">conclusion</h3>\n\n\n\n<p>In conclusion, creating a widget programmatically in Magento 2 is a great way to extend the functionality of your store and make it more user-friendly. By following the steps outlined in this blog, you can create a custom widget that can display a wide range of content on your website.</p>\n<div class='sfsi_Sicons sfsi_Sicons_position_left' style='float: none; vertical-align: middle; text-align:left'><div style='margin:0px 8px 0px 0px; line-height: 24px'><span>Please follow and like us:</span></div><div class='sfsi_socialwpr'><div class='sf_fb_share sf_icon' style='text-align:left;vertical-align: middle;'><a  target='_blank' rel='noopener' href='https://www.facebook.com/sharer/sharer.php?u=/how-to-create-a-widget-programmatically-in-magento-2/' style='display:inline-block;'><img class='sfsi_wicon'  data-pin-nopin='true' alt='fb-share-icon' title='Facebook Share' src='https://webguru.dev/wp-content/plugins/ultimate-social-media-icons/images/share_icons/fb_icons/en_US.svg' /></a></div><div class='sf_twiter sf_icon' style='display: inline-block;vertical-align: middle;width: auto;margin-left: 7px;'>\r\n\t\t\t\t\t\t<a target='_blank' rel='noopener' href='https://twitter.com/intent/tweet?text=How+to+create+a+Widget+Programmatically+in+Magento+2+https%3A%2F%2Fwebguru.dev%2Fhow-to-create-a-widget-programmatically-in-magento-2%2F'style='display:inline-block' >\r\n\t\t\t\t\t\t\t<img data-pin-nopin= true class='sfsi_wicon' src='https://webguru.dev/wp-content/plugins/ultimate-social-media-icons/images/share_icons/Twitter_Tweet/en_US_Tweet.svg' alt='Tweet' title='Tweet' >\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div></div></div><div class=\"saboxplugin-wrap\" itemtype=\"http://schema.org/Person\" itemscope itemprop=\"author\"><div class=\"saboxplugin-tab\"><div class=\"saboxplugin-gravatar\"><div data-gatsby-image-wrapper=\"\" style=\"position:relative;overflow:hidden;display:inline-block;vertical-align:top\" class=\"gatsby-image-wrapper gatsby-image-wrapper-constrained  inline-gatsby-image-wrapper\"><div style=\"max-width:100px;display:block\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height=&#x27;100&#x27;%20width=&#x27;100&#x27;%20xmlns=&#x27;http://www.w3.org/2000/svg&#x27;%20version=&#x27;1.1&#x27;%3E%3C/svg%3E\" style=\"max-width:100%;display:block;position:static\"/></div><div aria-hidden=\"true\" data-placeholder-image=\"\" style=\"height:100%;left:0;position:absolute;top:0;width:100%\"></div><img data-gatsby-image-ssr=\"\" data-wp-inline-image=\"1\" data-main-image=\"\" style=\"height:100%;left:0;position:absolute;top:0;transform:translateZ(0);transition:opacity 250ms linear;width:100%;will-change:opacity;opacity:0\" sizes=\"(min-width: 100px) 100px, 100vw\" decoding=\"async\" loading=\"lazy\" data-src=\"/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/05624c0b3d4a4f7d0da605f624d7bb07/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&amp;a=w%3D25%26h%3D25%26fm%3Dpng%26q%3D90&amp;cd=2024-11-12T13%3A05%3A22\" data-srcset=\"/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/05624c0b3d4a4f7d0da605f624d7bb07/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&amp;a=w%3D25%26h%3D25%26fm%3Dpng%26q%3D90&amp;cd=2024-11-12T13%3A05%3A22 25w,/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/7d342f8b9135b7648f10ed5d19c5b6df/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&amp;a=w%3D50%26h%3D50%26fm%3Dpng%26q%3D90&amp;cd=2024-11-12T13%3A05%3A22 50w,/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/f7535d1722cb1d17e5bf31154bf170d3/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&amp;a=w%3D100%26h%3D100%26fm%3Dpng%26q%3D90&amp;cd=2024-11-12T13%3A05%3A22 100w\" alt=\"Aaron Jenkins\"/><noscript><img data-gatsby-image-ssr=\"\" data-wp-inline-image=\"1\" data-main-image=\"\" style=\"height:100%;left:0;position:absolute;top:0;transform:translateZ(0);transition:opacity 250ms linear;width:100%;will-change:opacity;opacity:0\" sizes=\"(min-width: 100px) 100px, 100vw\" decoding=\"async\" loading=\"lazy\" src=\"/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/05624c0b3d4a4f7d0da605f624d7bb07/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&amp;a=w%3D25%26h%3D25%26fm%3Dpng%26q%3D90&amp;cd=2024-11-12T13%3A05%3A22\" srcSet=\"/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/05624c0b3d4a4f7d0da605f624d7bb07/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&amp;a=w%3D25%26h%3D25%26fm%3Dpng%26q%3D90&amp;cd=2024-11-12T13%3A05%3A22 25w,/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/7d342f8b9135b7648f10ed5d19c5b6df/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&amp;a=w%3D50%26h%3D50%26fm%3Dpng%26q%3D90&amp;cd=2024-11-12T13%3A05%3A22 50w,/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/f7535d1722cb1d17e5bf31154bf170d3/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&amp;a=w%3D100%26h%3D100%26fm%3Dpng%26q%3D90&amp;cd=2024-11-12T13%3A05%3A22 100w\" alt=\"Aaron Jenkins\"/></noscript><script type=\"module\">const t=\"undefined\"!=typeof HTMLImageElement&&\"loading\"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll(\"img[data-main-image]\");for(let e of t){e.dataset.src&&(e.setAttribute(\"src\",e.dataset.src),e.removeAttribute(\"data-src\")),e.dataset.srcset&&(e.setAttribute(\"srcset\",e.dataset.srcset),e.removeAttribute(\"data-srcset\"));const t=e.parentNode.querySelectorAll(\"source[data-srcset]\");for(let e of t)e.setAttribute(\"srcset\",e.dataset.srcset),e.removeAttribute(\"data-srcset\");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector(\"[data-placeholder-image]\").style.opacity=0)}}</script></div><script type=\"application/json\" data-wp-inline-image-hydration=\"1\">{\"image\":{\"images\":{\"sources\":[],\"fallback\":{\"src\":\"/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/05624c0b3d4a4f7d0da605f624d7bb07/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&a=w%3D25%26h%3D25%26fm%3Dpng%26q%3D90&cd=2024-11-12T13%3A05%3A22\",\"srcSet\":\"/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/05624c0b3d4a4f7d0da605f624d7bb07/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&a=w%3D25%26h%3D25%26fm%3Dpng%26q%3D90&cd=2024-11-12T13%3A05%3A22 25w,/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/7d342f8b9135b7648f10ed5d19c5b6df/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&a=w%3D50%26h%3D50%26fm%3Dpng%26q%3D90&cd=2024-11-12T13%3A05%3A22 50w,/_gatsby/image/2c35eda577657dc17647bf1d65e5bd4e/f7535d1722cb1d17e5bf31154bf170d3/Aaron-Jenkins.png?u=https%3A%2F%2Fwebguru.dev%2Fwp-content%2Fuploads%2F2024%2F11%2FAaron-Jenkins.png&a=w%3D100%26h%3D100%26fm%3Dpng%26q%3D90&cd=2024-11-12T13%3A05%3A22 100w\",\"sizes\":\"(min-width: 100px) 100px, 100vw\"}},\"layout\":\"constrained\",\"width\":100,\"height\":100},\"alt\":\"Aaron Jenkins\",\"className\":\" inline-gatsby-image-wrapper\",\"data-wp-inline-image\":\"1\"}</script></div><div class=\"saboxplugin-authorname\"><a href=\"/author/aaron-jenkins/\" class=\"vcard author\" rel=\"author\"><span class=\"fn\">Aaron Jenkins</span></a></div><div class=\"saboxplugin-desc\"><div itemprop=\"description\"><p>I am Aaron Jenkins, a Magento Developer with over 12+ years of experience. I specialize in Magento 2 and I am passionate about sharing my knowledge and experience through my blog. Here, I will be sharing tutorials, tips, and best practices for all things Magento 2. Follow my blog and let&#8217;s learn and grow together.</p>\n</div></div><div class=\"clearfix\"></div></div></div>","date":"February 15, 2023"}},"pageContext":{"id":"cG9zdDo3MTA="}},"staticQueryHashes":[],"slicesMap":{}}